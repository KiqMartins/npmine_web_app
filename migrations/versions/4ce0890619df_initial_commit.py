"""initial commit

Revision ID: 4ce0890619df
Revises: 
Create Date: 2024-11-12 00:57:55.161765

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4ce0890619df'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('doi',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('doi', sa.String(length=150), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('doi')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('compounds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('journal', sa.String(length=5000), nullable=True),
    sa.Column('compound_name', sa.String(length=5000), nullable=True),
    sa.Column('compound_image', sa.String(length=5000), nullable=True),
    sa.Column('smiles', sa.String(length=5000), nullable=True),
    sa.Column('article_url', sa.String(length=500), nullable=True),
    sa.Column('inchi_key', sa.String(length=5000), nullable=True),
    sa.Column('exact_molecular_weight', sa.Float(), nullable=True),
    sa.Column('class_results', sa.String(length=5000), nullable=True),
    sa.Column('superclass_results', sa.String(length=5000), nullable=True),
    sa.Column('pathway_results', sa.String(length=5000), nullable=True),
    sa.Column('isglycoside', sa.String(length=5000), nullable=True),
    sa.Column('pubchem_id', sa.String(length=5000), nullable=True),
    sa.Column('inchi', sa.String(length=5000), nullable=True),
    sa.Column('source', sa.String(length=10), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('taxa',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('article_url', sa.String(length=5000), nullable=True),
    sa.Column('verbatim', sa.String(length=5000), nullable=True),
    sa.Column('odds', sa.Float(), nullable=True),
    sa.Column('datasourceid', sa.String(length=5000), nullable=True),
    sa.Column('taxonid', sa.Integer(), nullable=True),
    sa.Column('classificationpath', sa.String(length=5000), nullable=True),
    sa.Column('classificationrank', sa.String(length=5000), nullable=True),
    sa.Column('matchtype', sa.String(length=50), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doicomp',
    sa.Column('doi_id', sa.Integer(), nullable=False),
    sa.Column('compound_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['compound_id'], ['compounds.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['doi_id'], ['doi.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('doi_id', 'compound_id')
    )
    op.create_table('doitaxa',
    sa.Column('doi_id', sa.Integer(), nullable=False),
    sa.Column('taxon_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['doi_id'], ['doi.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['taxon_id'], ['taxa.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('doi_id', 'taxon_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('doitaxa')
    op.drop_table('doicomp')
    op.drop_table('taxa')
    op.drop_table('compounds')
    op.drop_table('accounts')
    op.drop_table('role')
    op.drop_table('doi')
    # ### end Alembic commands ###
