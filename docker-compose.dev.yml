# docker-compose.yml (This file is for your development environment)
version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      retries: 5
      start_period: 10s
      timeout: 2s

  web:
    build: . 
    environment:
      FLASK_ENV: development
      FLASK_APP: websiteNPMINE:create_app()
      FLASK_DEBUG: 1
      SQLALCHEMY_DATABASE_URI: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      SECRET_KEY: ${SECRET_KEY}
      SQLALCHEMY_TRACK_MODIFICATIONS: ${SQLALCHEMY_TRACK_MODIFICATIONS}
      TEMP_FOLDER: ${TEMP_FOLDER}
      MAIL_SERVER: ${MAIL_SERVER}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USE_TLS: ${MAIL_USE_TLS}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"
    volumes:
      - .:/app 
    command: bash -c "conda run -n npmine_web_app_prod flask db upgrade && conda run -n npmine_web_app_prod python populate_database.py && conda run -n npmine_web_app_prod flask run --host 0.0.0.0 --port 5000"

volumes:
  postgres_data:
